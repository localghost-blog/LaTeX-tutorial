[{"id":0,"href":"/latex-tutorial/zh/docs/getting-started-with-latex/","title":"初次使用 LaTeX","section":"Docs","content":"\r\\(\\)\r准备工作\r#\r使用$\\LaTeX$前，你需要有一台已安装$\\LaTeX$的电脑，或者前往The LaTeX Project官网下载并安装一个$\\TeX$发行版。\n如官网不方便访问，可以访问清华大学开源软件镜像站获取$\\TeX$发行版，其中Windows系统或Linux系统使用TeX Live，而MacOS使用MacTeX。\n或者通过命令行下载并安装$\\TeX$发行版，如下：\nWindows\r$ choco install texlive MacOS\r$ brew cask install mactex # 或者 $ brew cask install basictex Ubuntu\r$ apt install texlive # or $ apt install texlive-base 此外，也可以访问Overleaf等在线服务以联网使用$\\LaTeX$。\n以下以本地运行为例。\n第一个$\\LaTeX$文件\r#\r创建新文件如下。可以使用任意名字，但建议以.tex结尾。\n% helloworld.tex \\documentclass{article} \\begin{document} Hello, World! \\end{document} 打开命令行， 用命令 cd 切换至文件所在目录，然后运行xelatex。 编译成功后，你会在当前目录发现helloworld.pdf以及一些其它文件。\n$ cd /path/to/your/folder $ xelatex helloworld # or xelatex helloworld.tex 若编译失败，则会显示错误信息，并停止编译。此时按ctrl-D(MacOS下为control-D)返回命令行。\n代码结构\r#\r一个合法的$\\LaTeX$代码需要正确格式以使编译程序处理。一般来说，任何一个$\\TeX$文件需要以以下命令开始：\n\\documentclass{...} 该命令指定了PDF文档的类型(如文章、书籍、演示文稿等)。 在此之后，可以添加命令来改变文档的样式，或者加载宏包(package)以获取拓展功能。 加载宏包的命令如下：\n\\usepackage{...} 完成所有准备工作后，用以下命令进入正文内容。正文内容以前的部分称为导言(preamble)。\n\\begin{document} 正文内容包括$\\LaTeX$命令以及普通文本。 在正文结束后，用以下命令结束文档。\n\\end{document} 该命令后的任何字符将被忽略。\n在LaTeX 文件内容一章会具体展开代码结构和内容的讨论，在此之前我们先介绍一些常用的文档类型。\n文档导言\r#\r文档类型: 文档类型由命令\\documentclass指定: \\documentclass[options]{class} 其中class是文档类型的名称，控制整篇文档的大致风格，而[]内的部分提供一些参数的调整，可以如前文样例一样省去或置空。常用的名称和参数见以下表格： class 描述 article 文章格式，常用于科技论文、短篇报告、说明文档等。 report 报告格式，适用分数个章节的长篇报告，或是短篇书籍、博士论文等。 book 书籍格式。 beamer 演示文稿格式，适于做报告时配合使用。 options 描述 (\\d+)pt 设置正文主要字体大小。如12pt，默认为10pt。 (\\w+)paper 设置页面大小。默认为letterpaper(8.5in$\\times$11in，约合21.6cm$\\times$28.0cm)。其它可选值有a5paper，b5paper，executivepaper及legalpaper等。 fleqn 行间公式左置。默认居中。 leqno 公式编号左置。默认居右。 (no)?titlepage 设置命令\\maketitle是否生成单独页。article默认为notitlepage，report，book默认为titlepage。 (one|two)column 单/双列排版。默认为单列。 (one|two)side 单/双面排版。双面时奇偶页页眉页脚及页边距不同。artcle，report默认为单面，book默认为双面 以下是一个合法(但没必要)的文档类型命令\n\\documentclass[10pt, letterpaper, titlepage, onecolumn, twoside]{book} 宏包: 编写文档时偶尔会发现部分需求难以用最基本的$\\LaTeX$实现，例如插入图片，文字上色、高亮代码等。此时一般可以通过使用宏包来简单实现。 宏包用以下命令调用：\n\\usepackage[options]{package} % 或者 \\usepackage[options]{package1, package2, ...} 其中package是宏包的名称，options是宏包的参数。可以一次性调用多个宏包，但参数作用于所有宏包。\n现代的$\\TeX$发布版有大量的预安装宏包，可以使用命令texdoc来阅读已安装宏包的文档：\n$ texdoc package "},{"id":1,"href":"/latex-tutorial/zh/docs/international-language-support/","title":"多语言支持","section":"Docs","content":"\r\\(\\)\r多语言支持\r#\r现代的$\\TeX$引擎，如XeTeX和LuaTeX，原生支持UTF-8编码。如下：\n源代码\r#\r\\documentclass{article} \\begin{document} Français Português Español Føroyskt \\end{document} 编译结果\r#\rFrançais Português Español Føroyskt\r然而非拉丁字母无法直接在$\\LaTeX$中使用，如西里尔字母、希腊字母、阿拉伯字母以及东亚文字等。\n我们主要介绍中文的支持，提供两种解决方案。\n方案一：xeCJK宏包\r#\rxeCJK是一个XeLaTeX宏包，用于排版中日韩(CJK)文字，有以下功能：\n分别设置CJK与英文字体； 自动忽略CJK文字间空格(保留其它空格)，允许在非标点汉字和英文字母间断行； 提供多种标点处理方式； 自动调整中英文间空白。 在引入宏包后，须指定CJK文字的字体，然后可以在文档中自由使用中日韩文字。\n更多特性及设定见其文档。\n源代码\r#\r\\documentclass{article} \\usepackage{xeCJK} \\setCJKmainfont{SimSun} \\begin{document} 汉语测试 \\end{document} 编译结果\r#\r汉语测试\r方案二：ctex宏包与文档类\r#\r另一种方式是使用ctex宏包与文档类，其进一步封装了CJK，xeCJK，luatexja等宏包， 使得用户在排版时无须考虑排版引擎等细节。\n注意事项：该方案会改变默认的页码位置，如果需要使用默认的页码位置，请在文档中使用以下命令：\n\\usepackage{fancyhdr} \\pagestyle{fancy} \\lfoot{} ctexart文档类\r\\documentclass{ctexart} \\begin{document} 少写两行太好用啦！ \\end{document} ctex宏包\r\\documentclass{article} \\usepackage{ctex} \\begin{document} 多了一行 \\end{document} ctex会自动寻找中文字体。默认的字体如下：\nWindows MacOS Linux XeLaTeX 中易字库 + 微软雅黑 华文字库 + 苹方 Fandol字库 LuaLaTeX 中易字库 + 微软雅黑 华文字库 + 苹方 Fandol字库 pdfLaTeX 中易字库 + 微软雅黑 不可用 不可用 也可以使用\\setCJKmainfont{}命令来设置中文字体。\n更多特性及设定见其文档。\n字体使用\r#\r使用本机安装字体\r#\rXeTeX通常使用fontconfig库查找和调用字体，因此可以用fc-list命令显示可用的字体。 在命令行运行以下命令：\n$ fc-list \u0026gt; fontlist.txt 可将系统中所有安装的字体列表存入fontlist.txt文件中。 而可用于CJK字体参数的字体名可用以下命令：\n$ fc-list -f \u0026#34;%{family}\\n\u0026#34; :lang=zh \u0026gt; zhfont.txt 以下是部分预装字体 Windows\r$ fc-list -f \u0026#34;%{family}\\n\u0026#34; :lang=zh 方正姚体,FZYaoTi 黑体,SimHei 微软雅黑,Microsoft YaHei 华文仿宋,STFangsong 华文楷体,STKaiti 华文隶书,STLiti 幼圆,YouYuan MacOS\r$ fc-list -f \u0026#34;%{family}\\n\u0026#34; :lang=zh 苹方-简,蘋方-簡,PingFang SC .苹方-繁,.蘋方-繁,.PingFang TC 苹方-繁,蘋方-繁,PingFang TC 黑体-繁,黑體-繁,Heiti TC,黒体-繁,Heiti-번체 .苹方-繁,.蘋方-繁,.PingFang TC 黑体-繁,黑體-繁,Heiti TC,黒体-繁,Heiti-번체 Ubuntu\r$ fc-list -f \u0026#34;%{family}\\n\u0026#34; :lang=zh AR PL Mingti2L Big5,文鼎ＰＬ細上海宋 AR PL KaitiM GB,文鼎ＰＬ简中楷 AR PL KaitiM Big5,文鼎ＰＬ中楷 AR PL SungtiL GB,文鼎ＰＬ简报宋 Droid Sans Fallback 以Windows系统为例，以下使用黑体方式均合法。\n\\setCJKmainfont{黑体} % 或者 \\setCJKmainfont{SimHei} 使用本地字体\r#\r若要使用本地字体，可以使用\\setCJKmainfont[options]{fontname}命令，其中参数options为本地字体相对命令行当前路径的路径，fontname为字体名。\n使用样例如下：\n% folder/src/main.tex \\documentclass{ctexart} \\setCJKmainfont[Path=fonts/]{LXGWWenKaiScreen} % located in folder/fonts/ \\begin{document} 叽里呱啦。 \\end{document} foo@bar:folder$ xelatex src/main "},{"id":2,"href":"/latex-tutorial/zh/docs/latex-file-content/","title":"LaTeX 文件内容","section":"Docs","content":"\r\\(\\)\r$\\LaTeX$文件结构\r#\r在此前的代码结构一节中，我们初步介绍了$\\LaTeX$文件的结构。以下是文件内容的示意图。\nflowchart LR\rA(文件) --\u003e B(导言)\rA --\u003e C(正文)\rA --\u003e D(忽略)\rB --\u003e E(文档类型)\rB --\u003e F(宏包, 全局设定, 注释)\rC --\u003e G(开始)\rC --\u003e H(文字, 命令, 环境, 注释)\rC --\u003e I(结束)\r正文部分的内容由文字，命令，环境，注释组成。一般来说，文字会被按照原样处理为文档的内容，其余部分会按照$\\LaTeX$的语法规则进行处理。我们将分别介绍这些部分的内容。\n文字\r#\r空格\r#\r\\n([ \\t]*\\n)+ -\u0026gt; 段落终止: 两个文段间的空行定义段落的终止，多个空行被视为一个空行。 (?\u0026lt;=\\n)[ \\t]+ -\u0026gt; 忽略, (?\u0026lt;!\\n)([ \\t]+|[ \\t]*\\n) -\u0026gt; 空格: 空白符，如空格键、tab键输入的字符皆视为空格，连续的多个空格视为一个空格。行头空格忽略不计，而单个换行符亦视为空格。 以下是一个例子：\n源代码\r#\rIt does not matter whether you enter one or several spaces after a word. An empty line starts a new paragraph. 编译结果\r#\rIt does not matter whether you enter one or several spaces after a word.\nAn empty line starts a new paragraph.\n单词间距与断行\r#\r在进行西文排版时，为了使文字达到右边界，$\\LaTeX$会适度调整单词间距。为提高可读性，其也会在句尾稍加间距。$\\LaTeX$会自动选择断行位置。若在空格处断行，会舍去空格生成的间距；若在词中断行，会生成连接符。\n$\\LaTeX$的默认句终止符为句号.，问号?与感叹号!。若句号紧随大写字母，则其不会处理为语句终止，这是因为句号常出现于单词缩写中，如Q.E.D.。\n你可以以特殊命令改变当前空格和句号的规则。 如~会生成不调整间距，亦不断行的空格。 而命令\\@则会指定其紧随的句号为语句终止，即使其前为大写字母。\n例子见下\n源代码\r#\rMr.~Smith was happy to see her\\\\ cf.~Fig.~5\\\\ I like BASIC\\@. What about you? 编译结果\r#\rMr. Smith was happy to see her\ncf. Fig. 5\nI like BASIC. What about you?\n以下命令禁止句尾的额外间距：\n\\frenchspacing 这在非英文语言中是常见的，若你使用该命令，命令\\@非必要。\n特殊字符\r#\r保留字符\r#\r多数字符在$\\LaTeX$中为其本义，但以下字符有特殊用途：\n# $ % ^ \u0026 _ { } ~ \\\r其中$，^，_用于数学公式排版，\u0026amp;用于表格排版，~用途见上，%用于注释。 若想在文档中使用其本义，须在其前面加上\\，如\\$。\\为例外，需要使用命令\\textbackslash(在数学环境为\\backslash)。细表见下：\n# $ % ^ \u0026amp; _ { } ~ \\ \\# \\$ \\% \\^{} \\\u0026amp; \\_ \\{ \\} \\~{} \\textbackslash (\\backslash) 引号\r#\r在$\\LaTeX$不能直接使用引号，单引号‘和’分别用`和'输入；双引号则用``和''输入。在使用ctex宏包或文档类时，中文引号可以直接输入。\n源代码\r#\r``Please press the `x\u0026#39; key.\u0026#39;\u0026#39; ##international-language-support/#使用本地字体 编译结果\n\u0026ldquo;Please press the \u0026lsquo;x\u0026rsquo; key.\u0026rdquo;\n连字与破折号 (-)\r#\r$\\LaTeX$按连续-的个数提供3种“横线”： 单个-用来组成复合词， 连续两个-用来连接数字表示范围， 连续三个-用来连接单词，语义上类似破折号。\n源代码\r#\rdaughter-in-law, X-rated\\\\ pages 13--67\\\\ yes---or no? \\\\ $0$, $1$ and $-1$ 编译结果\r#\rdaughter-in-law, X-rated\npages 13–67\nyes—or no?\n$0$, $1$ and $-1$\n斜杠 (/)\r#\r在两个单词间加入斜杠/会使编译器将其视为一个单词，如read/write。 但在排版时也会禁止在行尾生成连字符，因此可能出现错误‘overfull’。 解决方案是改用\\slash。尽管如此，普通的/仍然会在表示比例时使用，如5 MB/s.\n度数符号 ($^\\circ$)\r#\r在纯净\\LaTeX中，使用$^\\circ$表示度数。\nIt\u0026#39;s $-30\\,^{\\circ}\\mathrm{C}$. I will soon start to super-conduct. It\u0026rsquo;s ${-30,}^{\\circ}$C. I will soon start to super-conduct.\n而宏包textcomp提供了\\textdegree和\\textcelsius等用于方便地表示度数。\n源代码\r#\r30 \\textcelsius{} is 86 \\textdegree{F}. 编译结果\r#\r30 $\\text{\\textdegree}$C is 86 $\\text{\\textdegree}$F.\r命令\r#\r$\\LaTeX$ 命令以反斜杠\\开头，大小写敏感，有以下两种形式：\n\\\\[a-zA-Z]+\\*?([...]|{...})*： 在反斜杠后紧随若干字母，然后终止于非字母。 部分命令可以带星号，与不带星号的命令有差异。 部分命令提供以[]或{}包围的若干参数。 一般来说，[]为可选参数，{}为必须参数，不可以随意调换参数的顺序。 此外，一般来说可选参数会在必须参数的前面。 \\\\[^a-zA-Z]：由反斜杠及紧随的一个非字母组成。 注意事项：\n命令后的空格会被忽略。若想在命令后间隔，可以使用空参数{}加上空白符，或是用使用~，或\\ (反斜杠加空格)。\n如果未使用{}包围必须参数，可能出现不可预料的结果。大体来说有两种情况：\n以下一条命令/非空白字符作为参数。对于数学环境中的分式\\frac{}{}，如不使用{}包围，例如\\frac \\alpha \\beta，编译器会将其认为\\frac{\\alpha}{\\beta}。\n对其后的所有内容产生作用。如\\bfseries{}，其会加粗命令后的所有内容，截至\\bfseries所在环境结束。如\\text{\\bfseries bold} normal会加粗bold。\n请不要省去必须参数，除非你知道如此做的后果。\n源代码\r#\rNew \\TeX users may miss whitespaces after a command. % renders wrong Experienced \\TeX\\ users are \\TeX perts, and know how to use whitespaces. % renders correct 编译结果\r#\rNew $\\TeX$users may miss whitespaces after a command. Experienced $\\TeX$ users are $\\TeX$perts, and know how to use whitespaces.\r第2类命令分为以下几种类型：\n\\#, \\$, \\%, \\^{}, \\\u0026amp;, \\_, \\{, \\}, \\~{}：转义为反斜杠后的特殊字符；\n\\!, \\,, \\:, \\;, \\ ：转义为空格；具体宽度如下：\n\\! \\, \\: \\; \\ \\quad -3 3 4 5 6 18(与M的宽度相同) \\(, \\), \\[, \\]：分别为行内公式的开始与结束，以及行间公式的开始与结束；\n\\|：数学公式中为$\\|$；\n\\`, \\', \\^, \\~, \\=, \\., \\\u0026quot;：重音符，效果如下：\n\\`o \\'o \\^o \\~o \\=o \\.o \\\u0026quot;o $\\`o$ $\\'o$ $\\^o$ $\\~o$ $\\=o$ $\\.o$ $\\\u0026quot;o$ \\\\：结束当前行\n\\@：见单词间距与断行；\n\\-：指定断词位置；\n手动断行与断页\r#\r我们可以使用\\\\, \\newline来手动断行(在tabular等环境中为\\\\或\\cr)。其中\\\\有可选参数[length]，代表额外的垂直间距。\n断页的命令有两个：\\newpage, \\clearpage。区别在于：在双栏排版中\\newpage另起一栏，而\\clearpage另起一页。\n环境\r#\r\\begin{([a-zA-Z]+\\*?)}([...]|{...})* ... \\end{\\1} -\u0026gt; 环境：环境是一种特殊的命令，以\\begin{envname}开头，以\\end{envname}结尾，其中envname为环境名称，由字母组成，前后须相同。部分环境名支持在字母后面带星号，与不带星号的环境有差异。\n环境用于令一些效果在局部生效，或是生成特殊的文档元素，常见环境会之后详细介绍。\n注释\r#\r%.*\\n[ \\t]* -\u0026gt; 注释: 注释以%开头，截至行尾。所有字符皆被忽略，也包括下一行开头的空格。\n源代码\r#\rThis is an % stupid % Better: instructive \u0026lt;---- example: Supercal% ifragilist% icexpialidocious 编译结果\r#\rThis is an example: Supercalifragilisticexpialidocious.\r%可用于分隔不可以换行的环境。\n多行注释\r#\r除了连续多行开头使用%，还有两种方案来更优雅地实现多行注释。\n\\iffalse与\\fi：编译器会忽略\\iffalse和\\fi之间的所有内容。该命令允许嵌套使用。 如\n源代码\r#\r前面 \\iffalse 看不到 \\iffalse 看不到 \\fi 也看不到 \\fi 后面 编译结果\r#\r前面后面\r\\begin{comment}与\\end{comment}：编译器会忽略\\begin{comment}和\\end{comment}之间的所有内容。但是，该命令不允许嵌套，其会寻找\\begin{comment}后的第一个\\end{comment}作为命令的终止。\n注意事项：该命令需要使用宏包comment或verbatim。\n源代码\r#\r前面 \\begin{comment} 看不到 \\begin{comment} 看不到 \\end{comment} 也看不到 % \\end{comment} 若不注释，编译器会在该行报错 后面 编译结果\r#\r前面 也看不到后面1\n此处“也看不到”与“后面”间没有空格，是由于ctex的空格处理机制，若使用英文，可以看到单词间有空格，来源于注释前的换行符。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n逐字输出(verbatim)\r#\r环境verbatim用于逐字输出，将环境中的所有字符输出为原始字符，不会根据$\\LaTeX$的规则进行转义；而verbatim*会将空格显示为“⎵”。\n\\verb\\*?([^a-zA-Z\\* \\s])(.*?)\\1：需要简短地使用逐字输出，可使用\\verb命令，其将紧邻的字符视为起始符与终止符，其间的字符将被输出为原始字符。带星号的会将空格显示为“⎵”。\n起始符与终止符为字母、空格、星号以外的字符，一般使用|符号。\n源代码\r#\rThe \\verb|\\ldots| command \\ldots \\begin{verbatim} 10 PRINT \u0026#34;HELLO WORLD \u0026#34;; 20 GOTO 10 \\end{verbatim} 编译结果\r#\rThe \\ldots command $\\ldots$\n10 PRINT \u0026quot;HELLO WORLD \u0026quot;;\n20 GOTO 10\n源代码\r#\r\\begin{verbatim*} the starred version of the verbatim environment emphasizes the spaces in the text \\end{verbatim*} \\verb*|like this :-) | 编译结果\r#\rthe⎵starred⎵version⎵of\nthe⎵⎵⎵⎵⎵⎵verbatim\nenvironment⎵emphasizes\nthe⎵spaces⎵⎵⎵in⎵the⎵text\nlike⎵⎵⎵this⎵:-)⎵\n"},{"id":3,"href":"/latex-tutorial/zh/docs/common-environments/","title":"常见环境","section":"Docs","content":"\r\\(\\)\r列表环境\r#\r列表环境有三种，分别是：\nitemize：无序列表； enumerate：有序列表； description：描述列表。 列表的项以\\item开头，后面可以跟着一个描述，描述的内容会被放在列表项的右边。 \\item有可选参数[name]，用于指定列表项的名称，对于desription为必须项。例子见下：\n源代码\r#\r\\begin{enumerate} \\item You can nest the list environments to your taste: \\begin{itemize} \\item But it might start to look silly. \\item[-] With a dash. \\end{itemize} \\item Therefore remember: \\begin{description} \\item[Stupid] things will not become smart because they are in a list. \\item[Smart] things, though, can be presented beautifully in a list. \\end{description} \\end{enumerate} 编译结果\r#\rYou can nest the list environments to your taste:\n•\tBut it might start to look silly.\n-\tWith a dash.\nTherefore remember:\nStupid things will not become smart because they are in a list.\nSmart things, though, can be presented beautifully in a list.\n注意事项：列表环境可以如上例一样嵌套，但环境itemize及enumerate的嵌套层数至多为4层，其中itemize中的\\item对应的命令为\\labelitemi 至 \\labelitemiv，而enumerate中的\\item对应的命令为\\labelenumi 至 \\labelenumiv。 其代表的符号可以使用texdef查找：\n$ texdef -t latex -f \\labelitemi \\labelitemii \\labelitemiii \\labelitemiv 我们可以更改默认的列表样式。 在纯净$\\LaTeX$环境中，可以使用\\renewcommand{command}{symbol}命令，例如\\rewnewcommand{\\labelitemi}{\\dag}将第1层itemize的\\item显示为\\dag($\\dag$)。\n宏包enumitem给出了方便地更改默认列表样式的方法，或仅修改当前的列表环境，也可以设置其它参数，见其文档。\n对齐环境\r#\r环境center, flushleft, flushright可以用于对齐文本，例如：\n源代码\r#\r\\begin{flushleft} This text is\\\\ left-aligned. \\LaTeX{} is not trying to make each line the same length. \\end{flushleft} \\begin{flushright} This text is right-\\\\aligned. \\LaTeX{} is not trying to make each line the same length. \\end{flushright} \\begin{center} At the centre\\\\of the earth \\end{center} 编译结果\r#\rThis text is left-aligned. $\\LaTeX$ is not trying to make each line the same length.\rThis text is right- aligned. $\\LaTeX$ is not trying to make each line the same length.\rAt the centre of the earth\r此外，可用\\centering, \\raggedright, \\raggedleft等命令来设置文本的对齐方式。 区别在于环境会在上下文产生额外间距，而命令仅改变对齐方式。\n引文环境\r#\r$\\LaTeX$提供了quote和quotation两种引文环境，其中quote适于引用短文字，首行不缩进；quotation适用于引用若干段文字，首行缩进。 此外，引文环境相比一般文字有额外的左右缩进。\n源代码\r#\rFrance is Bacon: \\begin{quote} Knowledge is power. \\end{quote} 编译结果\r#\rFrance is Bacon:\nKnowledge is power.\n源代码\r#\r《孔雀东南飞》： \\begin{quotation} 孔雀东南飞，五里一徘徊。 十三能织素，十四学裁衣， 十五弹箜篌，十六诵诗书。 十七为君妇，心中常苦悲。 \\end{quotation} 编译结果\r#\r《孔雀东南飞》：\n孔雀东南飞，五里一徘徊。\n十三能织素，十四学裁衣， 十五弹箜篌，十六诵诗书。 十七为君妇，心中常苦悲。\n摘要环境\r#\r摘要环境abstract默认仅在文档类article, report中可用，一般紧跟\\maketitle命令。 若指定titlepage选项，则单独成页；若否，单栏排版时相当于居中标题与quotation环境，双栏排版时相当于\\section*中的一节。\n表格环境\r#\r排班表格的基本环境为tabular，使用方法如下：\n\\begin{tabular}[align]{column_spec} ⟨item1⟩ \u0026amp; ⟨item2⟩ \u0026amp; … \\\\ \\hline ⟨item1⟩ \u0026amp; ⟨item2⟩ \u0026amp; … \\\\ \\end{tabular} 每行的单元格以\u0026amp;分隔，\\\\(或\\cr)切换新行。\n注意事项：直接tabular环境时会和文字混排。此时align控制表格的垂直对齐方式：t, b对应按顶部、底部对齐，其余情况为居中对齐。 通常表格很少与文字混排，而是放在table浮动体环境中，并使用\\caption命令加标题，此时align参数非必要。\n而column_spec指定列数及每列格式。常见的列格式如下：\n格式 描述 l/c/r 单元格左对齐/居中/右对齐 p{width} 单元格宽度固定为width(如6em)，自动换行 | 绘制竖线 @{str} 自定义内容 其中l/c/r/p个数之和为列数。\n单元格前后会额外添加间距，而@格式会取消间距。\n此外，$\\LaTeX$提供将参数重复的写法*{n}{arg}，如以下的写法等效：\n\\begin{tabular}{|c|c|c|c|c|p{4em}|p{4em}|} % 及 \\begin{tabular}{|*{5}{c|}*{2}{p{4em}|}} 分割线绘制\r#\r在表格每行的开头使用命令\\hline可以绘制分割线。此外\\cline{i-j}可以绘制第i列至第j列的横线。\n此外，宏包booktabs提供了科技论文中常用的三线表，提供\\toprule、\\midrule、\\bottomrule以绘制三条线，以及和\\cline对应的\\cmidrule命令。请尽量不要用其它横线和竖线。\n合并单元格\r#\r$\\LaTeX$按行排版表格，因此横向合并单元格较容易，命令为\n\\multicolumn{n}{column_spec}{text} 其中n为行数，column_spec为列格式，text为合并单元格的内容。其中column_spec仅允许出现一列。该命令也可用于修改某一个单元格的列样式。\n纵向合并需要用宏包multirow提供的命令\\multirow，其参数为n、width、text，其中width参数指定宽度，可以填*以使用自然宽度，其余参数与\\multicolumn相同。\n图片环境\r#\r该环境需要graphicx宏包支持。\n插入图片的命令如下：\n\\includegraphics[options]{filename} 其中options中的参数指定为key = value的形式，常用参数如下：\n参数 描述 width = (width) 缩放至宽度为(width) height = (height) 缩放至高度为(height) scale = (scale) 相对原尺寸缩放(scale)倍 angle = (angle) 逆时针旋转(angle)度 filename用相对路径或绝对路径表示，见使用本地字体一节。\nXeLaTeX原生支持.pdf, .eps矢量图，以及.jpg, .png, .bmp位图。\nsvg格式图片支持\r#\r由于LaTeX并不支持.svg格式文件的导入，因此需要将其转换为其它格式。\n此处推荐使用软件inkscape，安装后可以在命令行使用：\n$ inkscape sample.svg --export-eps=sample.eps # or $ inkscape sample.svg --export-pdf=sample.pdf 迷你页环境\r#\r$\\LaTeX$提供了生成独立页的环境minipage。命令如下：\n\\begin{minipage}[align][height][inner-align]{width} 其中align为迷你页与文字的混排格式(见表格环境)，height为高度，inner-align为内部的对齐方式，分为顶部t, 底部b, 居中c, 分散s, width为宽度。\n迷你页常在并排显示图片的时候使用，如并排显示两个图片，通常为以下格式(见并排浮动体与子浮动体)。\n\\begin{figure} \\centering \\begin{minipage}{.5\\textwidth} \\centering \\includegraphics[...]{figure1} \\caption{...} \\end{minipage} \\begin{minipage}{.5\\textwidth} \\centering \\includegraphics[...]{figure2} \\caption{...} \\end{minipage} \\end{figure} 浮动体环境\r#\r表格、图片等内容尺寸较大，会导致分页困难。 $\\LaTeX$为此引入的浮动体的机制，使得大块内容可以脱离原文，自动放置在合适位置。\n$\\LaTeX$预定义了两类浮动体环境table和figure，一般来说table放表格，figure放图片，但也可以放置任意内容。\n以table浮动体为例：\n\\begin{table}[placement] \\centering \\begin{tabular}{...} ... \\end{tabular} \\end{table} 参数placement提供浮动体允许排版的位置，见下表：\n参数 描述 h 此处 t 顶部 b 底部 p 单独成页 ! 改变部分参数，提高强制性 H 强制插入此处 其中H仅能单独使用，其余参数可以组合，如[ht!p]。\n注意事项：排版位置的选取与参数内符号顺序无关，总是以h-t-b-p的优先级决定位置。\n在双栏排版的环境下，$\\LaTeX$提供了table*和figure*环境，用于处理跨栏浮动体，用法与table和figure相同，但参数placement仅允许t和p。\n使用命令\\listoftables和\\listoffigures可以生成当前文件中的浮动体目录。\n浮动体可以用\\caption[]{}指定标题，其中长标题必须指定，短标题可选，会出现在目录中。\n并排浮动体与子浮动体\r#\r我们经常需要在浮动体中放置多个表格或图片，最简单的是并排放置，如\n\\begin{figure}{...} \\centering \\includegraphics[...]{figure1} \\qquad \\includegraphics[...]{figure2} \\\\ \\includegraphics[...]{figure3} \\caption{...} \\end{figure} 如需给并排图片添加标题，则需要借助minipage环境，见迷你页环境。\n如果需要给一个figure浮动体中的两个子图添加标题，则需要引入subcaption宏包(依赖于caption宏包)，具体请参考其文档。\n\\begin{figure} \\centering \\begin{subfigure}{...} \\centering \\includegraphics[...]{figure1.a} \\caption{...} \\end{subfigure} \\qquad \\begin{subfigure}{...} \\centering \\includegraphics[...]{figure1.b} \\caption{...} \\end{subfigure} \\end{figure} 并排图片和子图片的区别在于，并排图片为多个图片，而包含子图片的图片为单个图片。\n"},{"id":4,"href":"/latex-tutorial/zh/docs/how-to-write-a-well-structured-latex-file/","title":"如何写出一个结构化的LaTeX文档","section":"Docs","content":"\r\\(\\)\r文章结构\r#\r了解了如何输入文字内容后，我们可以尝试写出一个结构化的$\\LaTeX$文档。\nflowchart LR\rA(内容) --\u003e B(开端)\rA --\u003e C(正文)\rA --\u003e D(结尾)\rB --\u003e E(标题)\rB --\u003e F(前言)\rB --\u003e G(目录)\rC --\u003e H(章, 节, 小节)\rH --\u003e I(章节内容)\rD --\u003e J(附录)\rD --\u003e L(参考文献)\rD --\u003e M(索引)\r以上仅为示意图，可根据实际需要增加或删减部分。\n开端\r#\rTodo.\n正文\r#\rTodo.\n结尾\r#\rTodo.\n"}]